/////////////////////////////////////////////////////////////////
// SCM STRATEGY
/////////////////////////////////////////////////////////////////

-- [x] typescriptdemo.somee.com

-- [x] webapidemo.somee.com

/////////////////////////////////////////////////////////////////
// SCM INFO
/////////////////////////////////////////////////////////////////

-- [x] Set-ExecutionPolicy -Scope CurrentUser unrestricted

-- [x] npm packages

 npm list  --depth=0  

 npm install -g @angular/cli
 npm install -g --save-dev @angular/cli
 npm install -g --save-dev @angular/compiler
 npm install -g --save-dev @angular-devkit 
 npm install    --save-dev@angular-devkit/build-angular 
 
 npm update   @angular/compiler
 npm update   @angular-devkit/build-angular 
 
 npm update   @angular/cdk
 npm update   @angular/compiler-cli  --legacy-peer-deps
 npm update   @angular/compiler        --legacy-peer-deps
 npm install   @angular/compiler@16.1.2 --legacy-peer-deps
 npm update @angular-devkit/build-angular --legacy-peer-deps
 ng update @angular-devkit/build-angular
 ng update @angular/compiler
 ng  update @angular/core
  
 Error: Module not found: Error: Can't lve '@ngtools\webpack\src\ivy\index.js' 
 Error [ERR_REQUIRE_ESM]: require() of ES Module @angular\compiler\fesm2022\compiler.mjs not supported.
 Instead change the require of @angular\compiler\fesm2022\compiler.mjs to a dynamic import() which is available in all CommonJS modules.


 npm list  --depth=0  

├── @angular-devkit/build-angular@16.1.1
├── @angular/animations@16.1.2
├── @angular/cdk@15.2.9
├── @angular/cli@16.1.3
├── @angular/common@16.1.2
├── @angular/compiler-cli@10.2.5
├── @angular/compiler@16.1.2
├── @angular/core@16.1.2
├── @angular/forms@16.1.2
├── @angular/material@15.2.9
├── @angular/platform-browser-dynamic@16.1.2
├── @angular/platform-browser@16.1.2
├── @angular/router@16.1.2 

////////////////////////////////////////////////////////////////////////////
// CODESPACES
////////////////////////////////////////////////////////////////////////////

--[_] https://apereznwo.github.io/AngularMCSD_Public/

--[_] DEPLOY ON GITHUB CODESPACES

    #Build your Angular application: Create a production build of your Angular application 
    using the Angular CLI:

    $ ng build --c=production

    En archivo "index.html" Reemplazar <base href="/"> 
    https://apereznwo.github.io/AngularMCSD_Public

    Deploy to GitHub Pages: You can create a GitHub Pages branch or use the gh-pages 
    package to automate the deployment process. 

    Here's an example using the angular-cli-ghpages package:

    # Install the angular-cli-ghpages package globally
    npm install -g angular-cli-ghpages

    # Deploy the built application to GitHub Pages
    npx ngh --dir=dist/angular-dijkstra

    Replace your-angular-app with the name of your Angular app's directory 
    where the build artifacts are located.

    # Configure GitHub Pages: Go to your GitHub repository settings, 
    navigate to the GitHub Pages section, 
    and set the source branch to the one you used for deployment (e.g., gh-pages). 

    GitHub will provide you with a URL where your Angular application will be hosted.

    Remember, this method will make your Angular application available at a URL like 

    https://username.github.io/repository-name. 
    https://apereznwo.github.io/AngularMCSD_Public

    This URL will be accessible publicly, providing a permanent link to your deployed application.

    # (optional / verification), Go to pages > actions and find the label
    "pages build and deployment"
