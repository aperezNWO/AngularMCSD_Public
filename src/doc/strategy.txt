=====================================================================
-- TODO LIST GENERAL 
=====================================================================
-- [_] put uix on separated hosting.
-- [_] copiar de "angularspaeconsultalog.loginfoiview".
-- [_] [COMPONENTS]
    -- [>] [GENERAR ARCHIVO]
        -- [>] [GENERAR ARCHIVO XLS]
                -- [>] TABS
        -- [_] [GENERAR ARCHIVO ZIP]
        -- [_] [GENERAR ARCHIVO PDF] 
        -- [_] [GENERAR ARCHIVO CSV]
    -- [_] [ALGORITMOS]
        -- [_] [ALGORITMOS - DISTANCIA MAS CORTA]
        -- [_] [ALGORITMOS - ORDENAMIENTO]
        -- [_] [ALGORITMOS - EXPRESIONES REGULARES]
    -- [_] [TUTORIALES]
    -- [_] [HOME]
    -- [_] ANGULAR TOPICS.
        -- [_] TEMPLADE DRIVEN FORMS.
        -- [_] REACTIVE FORMS.
        -- [_] DYNAMIC FORMS. 
-- [_] disable chorome security.
        -- [_] "C:\Program Files\Google\Chrome\Application\"
        -- [_] chrome.exe --user-data-dir="C://Chrome dev session" --disable-web-security
-- [_] implementar filtro de busqueda en WEBAPI remoto.
-- [_] https://mugan86.medium.com/exportar-pdfs-en-angular-con-jspdf-85c7a11a110f
-- [_] ERROR Error: Uncaught (in promise): Invalid element provided as first argument
    at resolvePromise (zone.js:1193:31)

-- [_] list of sources and articles.

        -- [_] file uplodad angular .net client core example.
                -- [_] https://www.bezkoder.com/angular-15-file-upload/
-- [_] install bootstrap
       -- [_]implement menu.
-- [_] DebugHostingContent as webapi.
-- [_] Editar lista de cumpleaños exnacato.
-- [_] Backend como webapi service.
-- [_] Turn off .net core uix.
-- [_] Bootstrap menu navigation (from .NET CORE).
-- [_] DebugHostingContent as global/cdn.
-- [_] CSV download link.
-- [_] Algorithm Service.
-- [_] TOPICS
        -- [_] TYPESCRIPT.
        -- [_] ANGULAR.
        -- [_] IN THE REPLACE OF "TUTORIALS" / "MCSD CERT".
-- [_] scss.
-- [_] oauth.
    -- [_] seccion comentarios.
-- [_] read config file.
    -- [_] environments.
-- [_] Print type script version.
-- [_] menu collapse on page entry.
-- [_] prevent dead links on angular.
-- [_] cusotm error handling.

////////////////////////////////////////////////////////////////////////////////
-- [_] TODO LIST GENERAL
////////////////////////////////////////////////////////////////////////////////

-- [_] Algorithms

        -- [_] [TAOCP]

-- [_] Games
        -- [_] tic tac toe
        -- [_] hanoi towers
        -- [_] sudoku
-- [_] A.I. Apps
        -- [_] C# Accord
        -- [_] C++ OpenCV
        -- [_] Neural Networks
        -- [_] Machine Learning

-- [_] Backend
        -- [_] C#
        -- [_] C++
        -- [_] Node Js
        -- [_] Python
-- [_] Environments
        -- [_] CodeSandbox
        -- [_] Git Hub CodeSpaces
        -- [_] Docker

////////////////////////////////////////////////////////////////////////////////

=====================================================================
-- STRATEGY
=====================================================================

-- [CONSULTA XLS]

   -- [_] Añadir consulta node.js.

        -- [_]  let url    = this.prefix + 'demos/generarinformejson';
        -- [_]  " SELECT 
                       [ID_column]
                      ,[PageName]
                      ,[AccessDate]
                      ,[IpValue]
                 FROM 
                       [dbo].[accessLogs] 
                 WHERE
                       [LogType] = {0}
                 order by 
                       [ID_column] desc"

        -- [_] Añador Node.js EndPoint. 

        -- [_] https://codesandbox.io/p/github/aperezNWO/CS_NodeJs/

        -- [_] TestNodeJs().
        
-- [CONSULTA CSV]   

   -- [_] Añadir tab de consulta.
   -- [_] Añadir consulta node.js.

/*
 //
  TestNodeJs(): void {
    //
    console.log('[TEST NODE.JS] \n');
    //
    this.BtnTestNodeJSCaption  = "...(retrieving data)...";
    //
    let testNodeJsObservable: Observable<string> =
      this.algorithmService._TestNodeJs();
    //
    const testNodeJsObserver = {
      next: (jsondata: string) => {
        //
        this.lblStatusNodeJs = JSON.parse(jsondata)['recordsets'][0][0]['NombreCompleto'];
        //
        console.log(
          '[TEST - NODEJS] - (return): ' +
            this.lblStatusNodeJs,
        );
        //
        this.BtnTestNodeJSCaption = '[TEST NODE.JS]';
      },
      error: (err: Error) => {
        //
        console.error(
          '[TEST - NODEJS] - (ERROR) : ' + JSON.stringify(err.message),
        );
      },
      complete: () => {
        //
        console.log('[TEST - NODEJS]  -  (COMPLETE)');
        //
      },
    };
    //
    testNodeJsObservable.subscribe(testNodeJsObserver);
  }
}
*/

/*
 //
  _TestNodeJs(): Observable<string> {
    //
    let p_url: string = `https://ms7tks-4000.csb.app/databaseconnect`;
    //let p_url: string ='https://fluffy-space-barnacle-vrwvjp6qjvphw9g-4000.app.github.dev/databaseconnect';
    //
    let nodeJsOutput: Observable<string> = this.http.get<string>(
      p_url,
      this.HTTPOptions_JSON,
    );
    //
    console.log('Testing Url : ' + p_url);
    //
    return nodeJsOutput;
  }
}
*/
=====================================================================
